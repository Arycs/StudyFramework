// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace YouYou.DataTable
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DTJobLevel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static DTJobLevel GetRootAsDTJobLevel(ByteBuffer _bb) { return GetRootAsDTJobLevel(_bb, new DTJobLevel()); }
  public static DTJobLevel GetRootAsDTJobLevel(ByteBuffer _bb, DTJobLevel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DTJobLevel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Level { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NeedExp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Energy { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HP { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MP { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Attack { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Defense { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Hit { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Dodge { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Cri { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Res { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<YouYou.DataTable.DTJobLevel> CreateDTJobLevel(FlatBufferBuilder builder,
      int Id = 0,
      int Level = 0,
      int NeedExp = 0,
      int Energy = 0,
      int HP = 0,
      int MP = 0,
      int Attack = 0,
      int Defense = 0,
      int Hit = 0,
      int Dodge = 0,
      int Cri = 0,
      int Res = 0) {
    builder.StartTable(12);
    DTJobLevel.AddRes(builder, Res);
    DTJobLevel.AddCri(builder, Cri);
    DTJobLevel.AddDodge(builder, Dodge);
    DTJobLevel.AddHit(builder, Hit);
    DTJobLevel.AddDefense(builder, Defense);
    DTJobLevel.AddAttack(builder, Attack);
    DTJobLevel.AddMP(builder, MP);
    DTJobLevel.AddHP(builder, HP);
    DTJobLevel.AddEnergy(builder, Energy);
    DTJobLevel.AddNeedExp(builder, NeedExp);
    DTJobLevel.AddLevel(builder, Level);
    DTJobLevel.AddId(builder, Id);
    return DTJobLevel.EndDTJobLevel(builder);
  }

  public static void StartDTJobLevel(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int Level) { builder.AddInt(1, Level, 0); }
  public static void AddNeedExp(FlatBufferBuilder builder, int NeedExp) { builder.AddInt(2, NeedExp, 0); }
  public static void AddEnergy(FlatBufferBuilder builder, int Energy) { builder.AddInt(3, Energy, 0); }
  public static void AddHP(FlatBufferBuilder builder, int HP) { builder.AddInt(4, HP, 0); }
  public static void AddMP(FlatBufferBuilder builder, int MP) { builder.AddInt(5, MP, 0); }
  public static void AddAttack(FlatBufferBuilder builder, int Attack) { builder.AddInt(6, Attack, 0); }
  public static void AddDefense(FlatBufferBuilder builder, int Defense) { builder.AddInt(7, Defense, 0); }
  public static void AddHit(FlatBufferBuilder builder, int Hit) { builder.AddInt(8, Hit, 0); }
  public static void AddDodge(FlatBufferBuilder builder, int Dodge) { builder.AddInt(9, Dodge, 0); }
  public static void AddCri(FlatBufferBuilder builder, int Cri) { builder.AddInt(10, Cri, 0); }
  public static void AddRes(FlatBufferBuilder builder, int Res) { builder.AddInt(11, Res, 0); }
  public static Offset<YouYou.DataTable.DTJobLevel> EndDTJobLevel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<YouYou.DataTable.DTJobLevel>(o);
  }
};


}
