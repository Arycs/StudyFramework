// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto_C2GS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace YouYou.Proto {

  /// <summary>Holder for reflection information generated from Proto_C2GS.proto</summary>
  public static partial class ProtoC2GSReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto_C2GS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoC2GSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQcm90b19DMkdTLnByb3RvEgxZb3VZb3UuUHJvdG8aElByb3RvX0NvbW1v",
            "bi5wcm90byJFCghDMkdTX1J1bhImCgdDdXJyUG9zGAEgASgLMhUuWW91WW91",
            "LlByb3RvLlZlY3RvcjMSEQoJUm90YXRpb25ZGAIgASgCYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::YouYou.Proto.ProtoCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::YouYou.Proto.C2GS_Run), global::YouYou.Proto.C2GS_Run.Parser, new[]{ "CurrPos", "RotationY" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///玩家向服务器发送移动
  /// </summary>
  public sealed partial class C2GS_Run : YouYou.IProto, pb::IMessage<C2GS_Run> {
    private static readonly pb::MessageParser<C2GS_Run> _parser = new pb::MessageParser<C2GS_Run>(() => new C2GS_Run());
    public ushort ProtoId => ProtoIdDefine.Proto_C2GS_Run;
    public string ProtoEnName => "C2GS_Run";
    public ProtoCategory Category => ProtoCategory.Client2GameServer;
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2GS_Run> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::YouYou.Proto.ProtoC2GSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2GS_Run() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2GS_Run(C2GS_Run other) : this() {
      currPos_ = other.currPos_ != null ? other.currPos_.Clone() : null;
      rotationY_ = other.rotationY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2GS_Run Clone() {
      return new C2GS_Run(this);
    }

    /// <summary>Field number for the "CurrPos" field.</summary>
    public const int CurrPosFieldNumber = 1;
    private global::YouYou.Proto.Vector3 currPos_;
    /// <summary>
    ///坐标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::YouYou.Proto.Vector3 CurrPos {
      get { return currPos_; }
      set {
        currPos_ = value;
      }
    }

    /// <summary>Field number for the "RotationY" field.</summary>
    public const int RotationYFieldNumber = 2;
    private float rotationY_;
    /// <summary>
    ///旋转
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotationY {
      get { return rotationY_; }
      set {
        rotationY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2GS_Run);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2GS_Run other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrPos, other.CurrPos)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotationY, other.RotationY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currPos_ != null) hash ^= CurrPos.GetHashCode();
      if (RotationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotationY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currPos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrPos);
      }
      if (RotationY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(RotationY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrPos);
      }
      if (RotationY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2GS_Run other) {
      if (other == null) {
        return;
      }
      if (other.currPos_ != null) {
        if (currPos_ == null) {
          CurrPos = new global::YouYou.Proto.Vector3();
        }
        CurrPos.MergeFrom(other.CurrPos);
      }
      if (other.RotationY != 0F) {
        RotationY = other.RotationY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (currPos_ == null) {
              CurrPos = new global::YouYou.Proto.Vector3();
            }
            input.ReadMessage(CurrPos);
            break;
          }
          case 21: {
            RotationY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
