require 'Common/Define'
require 'Common/SysEventId'
require 'Common/UIFormId'
local LuaCSharpArr = require 'Common/LuaCSharpArr'

GameInit = {}
local this = GameInit;
local DebugLogProto = false;
local DebugLog = false;

function GameInit.Init()
    ---加载配置表
    this.LoadDataTables()
    this.InitDataManager()
    this.InitProto()
end

function GameInit.LoadDataTables()
    --章表 示例
    --require('DataNode/DataTable/Create/DTChapterEntity')
    --require('DataNode/DataTable/Create/DTChapterDBModel')
    --DTChapterDBModel.LoadList()
end

local m_TotalTableCount = 0 --总共需要加载的表格数量
local m_CurrLoadTableCount = 0 --当前加载的表格数量

function GameInit.AddTotalLoadTableCount()
    m_TotalTableCount = m_TotalTableCount + 1
end

function GameInit.LoadOneTableComplete()
    m_CurrLoadTableCount = m_CurrLoadTableCount + 1
    if (m_TotalTableCount == m_CurrLoadTableCount) then
        CS.YouYou.GameEntry.Event.CommonEvent:Dispatch(SysEventId.LoadLuaDataTableComplete)
    end
end

function GameInit.CreateLuaCSharpArr(len)
    return LuaCSharpArr.New(len);
end

function GameInit.InitDataManager()
    require 'DataNode/DataManager/UserDataManager';
    require 'DataNode/DataManager/ShareData/ShareUserData';
    UserDataManager.Init();
end
--初始化通讯协议
function GameInit.InitProto()
    require('Common/json')
    require('DataNode/Proto/ProtoDef')
    require('DataNode/Proto/SocketProtoListenerForLua')

    if GameEntry.Lua.DebugLog then
        DebugLog = true;
    end
    if GameEntry.Lua.DebugLogProto then
        DebugLogProto = true;
    end

    SocketProtoListenerForLua.AddProtoListener();

    GameEntry.Lua:GetPBBuffer("Proto_C2GWS",function(buffer)
        GlobalPB.load(buffer)
    end);

    GameEntry.Lua:GetPBBuffer("Proto_C2WS",function(buffer)
        GlobalPB.load(buffer)
    end);

    GameEntry.Lua:GetPBBuffer("Proto_GWS2C",function(buffer)
        GlobalPB.load(buffer)
    end);

    GameEntry.Lua:GetPBBuffer("Proto_WS2C",function(buffer)
        GlobalPB.load(buffer)
    end);
end

function GameInit.GetDebugLogProto()
    return DebugLogProto;
end


----发送消息到c#
function GameInit.SendProto(proto)
    if(DebugLogProto) then
        print(string.format("<color=#ffa200>发送消息:</color><color=#FFFB80>%s %s</color>", ProtoIDName[proto:GetID()], proto:GetID()));
        print(string.format("<color=#ffdeb3>==>>%s</color>", json.encode(proto.Packet)));
    end

    GameEntry.Socket:SendMainMsgForLua(proto:GetID(),proto:GetCategory(),assert(GlobalPB.encode(ProtoIDName[proto:GetID()], proto.Packet)));
end

function GameInit.Log(params)
    if(DebugLog) then
        print("[youyou]"..params);
    end
end