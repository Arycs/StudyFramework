UI_LoginCtrl = {};

local this = UI_LoginCtrl;

function UI_LoginCtrl.OnInit(userData)
    UI_LoginView.btnLogin.onClick:AddListener(function()

        if StringUtil.IsNullOrEmpty(UI_LoginView.inputUserName.text) then
            GameEntry.UI:OpenDialogFormBySysCode(10005);
            return;
        end

        if StringUtil.IsNullOrEmpty(UI_LoginView.inputPassword.text) then
            GameEntry.UI:OpenDialogFormBySysCode(10006);
            return;
        end

        local dic = {};
        dic["ChannelId"] = GameEntry.Data.SysDataManager.CurrChannelConfig.ChannelId;
        dic["Type"] = 1;
        dic["UserName"] = UI_LoginView.inputUserName.text;
        dic["Password"] = UI_LoginView.inputPassword.text;

        local url = GameEntry.Http.RealWebAccountUrl .. "/account";

        GameEntry.Lua:SendHttpData(url, this.OnLoginCallBack, dic);

        dic = nil;
        url = nil;
    end)

    UI_LoginView.btnReg.onClick:AddListener(function()
        ---关闭自己
        UI_LoginView.LuaForm:Close();
        GameEntry.UI:OpenUIForm(UIFormId.UI_Reg);
    end);
end

function UI_LoginCtrl.OnLoginCallBack(args)
    if args.HasError == false then
        local retValue = GameEntry.Lua:GetRetValue(args.Value);
        if retValue.HasError == false then
            ---登陆成功
            local jsonData = GameEntry.Lua:GetJsonData(retValue.Value);
            GameEntry.Data.UserDataManager.AccountId = tonumber(GameEntry.Lua:GetJsonDataValue(jsonData,"YFId"))
            jsonData = nil;

            UI_LoginView.LuaForm:Close();
        else
            ---登陆失败
            GameEntry.UI:OpenDialogFormBySysCode(retValue.ErrorCode);
        end
        retValue = nil;
    else
        ---登陆失败
        GameEntry.UI:OpenDialogFormBySysCode(10001);
    end

end

function UI_LoginCtrl.OnOpen(userData)

end

function UI_LoginCtrl.OnClose()

end

function UI_LoginCtrl.OnBeforDestroy()

end
